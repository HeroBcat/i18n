package i18n

// Code generated by i18n/pkg/main.go; DO NOT EDIT.

func init() {
	yamlMap = map[string]string{
		"cmd_en-GB":     "common_flags_v_usage:\n  message: check error message~\n\ncommon_flag_help_template:\n  args: 1\n  message: \"check %s help\"\n\ncommon_flag_help_template2:\n  args: 1\n  message: \"check %s help\"\n\ncommon_flag_help_template3:\n  args: 1\n  message: \"check %s help\"",
		"cmd_en-US":     "common_flags_v_usage:\n  message: check error message\n\ncommon_flag_help_template:\n  args: 1\n  message: \"check %s help\"\n\ncommon_flag_help_template2:\n  args: 1\n  message: \"check %s help\"",
		"cmd_zh-Hans":   "common_flags_v_usage:\n  message: 查看详细的错误信息\n\ncommon_flag_help_template:\n  args: 1\n  message: \"查看 %s 的帮助\"",
		"docs_zh-Hans":  "index_table_title_command:\n  message: 命令\n\nindex_table_title_desc:\n  message: 描述\n\ntitle_synopsis:\n  message: 描述\n\ntitle_aliases:\n  message: 快捷命令\n\ntitle_options:\n  message: 可用选项\n\ntitle_inherited_options:\n  message: 通用选项\n\ntitle_examples:\n  message: 使用用例\n\ntitle_related_commands:\n  message: 相关命令\n\ntitle_see_also:\n  message: 其他命令\n\nuseline_flags:\n  message: \"[选项]\"",
		"error_zh-Hans": "# file path error message\nfilepath_not_exist:\n  args: 1\n  message: \"无法读取文件内容: 因为文件 %s 不存在\"\n\nfilepath_not_sure_how_to_load:\n  args: 1\n  message: \"无法确定如何从路径 %s 加载\"\n\n# api error message\napi_unknown_error:\n  message: 未知错误\n\napi_not_null_error:\n  message: 不能为空\n\napi_not_exist_error:\n  message: 不存在\n\napi_duplicated_error:\n  message: 重复\n\napi_pattern_error:\n  message: 输入格式有误\n\napi_size_error:\n  message: 数字输入有误\n\napi_min_error:\n  message: 数字未达最小限制\n\napi_max_error:\n  message: 数字超出最大限制\n\napi_invalid_error:\n  message: 参数输入有误\n\napi_exceed_job_count_limitation_error:\n  message: 已经达到容器的最大并行限制，无法再创建这种类型的资源了，请关闭同类资源后再试。\n\napi_4xx_bad_request:\n  message: 请检查你所填写的参数\n\napi_401_unauthorized:\n  message: 尚未登录\n\napi_403_forbidden:\n  message: 访问被阻止\n\napi_404_not_found:\n  message: 不存在\n\napi_408_timeout:\n  args: 1\n  message: \"连接超时，状态码: %d\"\n\napi_409_conflict:\n  args: 1\n  message: \"冲突，状态码: %d\"\n\napi_410_gone:\n  args: 1\n  message: \"已丢失，状态码: %d\"\n\napi_5xx_internal_server_error:\n  message: 服务器异常\n\napi_504_gateway_timed_out:\n  message: 无法连接到服务器",
	}
}

var Print = NewPrintContext()

type printContext struct{}

func NewPrintContext() printContext {
	return printContext{}
}

var (
	cmdCommonFlagHelpTemplate = "cmd_common_flag_help_template"
	cmdCommonFlagsVUsage      = "cmd_common_flags_v_usage"
)

func CmdCommonFlagHelpTemplate(arg0 interface{}) string {
	return SPrintf(cmdCommonFlagHelpTemplate, arg0)
}

func CmdCommonFlagsVUsage() string {
	return SPrintf(cmdCommonFlagsVUsage)
}

func (p printContext) CmdCommonFlagHelpTemplate(arg0 interface{}) {
	Printf(cmdCommonFlagHelpTemplate, arg0)
}

func (p printContext) CmdCommonFlagsVUsage() {
	Printf(cmdCommonFlagsVUsage)
}

var (
	docsIndexTableTitleCommand = "docs_index_table_title_command"
	docsIndexTableTitleDesc    = "docs_index_table_title_desc"
	docsTitleAliases           = "docs_title_aliases"
	docsTitleExamples          = "docs_title_examples"
	docsTitleInheritedOptions  = "docs_title_inherited_options"
	docsTitleOptions           = "docs_title_options"
	docsTitleRelatedCommands   = "docs_title_related_commands"
	docsTitleSeeAlso           = "docs_title_see_also"
	docsTitleSynopsis          = "docs_title_synopsis"
	docsUselineFlags           = "docs_useline_flags"
)

func DocsIndexTableTitleCommand() string {
	return SPrintf(docsIndexTableTitleCommand)
}

func DocsIndexTableTitleDesc() string {
	return SPrintf(docsIndexTableTitleDesc)
}

func DocsTitleAliases() string {
	return SPrintf(docsTitleAliases)
}

func DocsTitleExamples() string {
	return SPrintf(docsTitleExamples)
}

func DocsTitleInheritedOptions() string {
	return SPrintf(docsTitleInheritedOptions)
}

func DocsTitleOptions() string {
	return SPrintf(docsTitleOptions)
}

func DocsTitleRelatedCommands() string {
	return SPrintf(docsTitleRelatedCommands)
}

func DocsTitleSeeAlso() string {
	return SPrintf(docsTitleSeeAlso)
}

func DocsTitleSynopsis() string {
	return SPrintf(docsTitleSynopsis)
}

func DocsUselineFlags() string {
	return SPrintf(docsUselineFlags)
}

func (p printContext) DocsIndexTableTitleCommand() {
	Printf(docsIndexTableTitleCommand)
}

func (p printContext) DocsIndexTableTitleDesc() {
	Printf(docsIndexTableTitleDesc)
}

func (p printContext) DocsTitleAliases() {
	Printf(docsTitleAliases)
}

func (p printContext) DocsTitleExamples() {
	Printf(docsTitleExamples)
}

func (p printContext) DocsTitleInheritedOptions() {
	Printf(docsTitleInheritedOptions)
}

func (p printContext) DocsTitleOptions() {
	Printf(docsTitleOptions)
}

func (p printContext) DocsTitleRelatedCommands() {
	Printf(docsTitleRelatedCommands)
}

func (p printContext) DocsTitleSeeAlso() {
	Printf(docsTitleSeeAlso)
}

func (p printContext) DocsTitleSynopsis() {
	Printf(docsTitleSynopsis)
}

func (p printContext) DocsUselineFlags() {
	Printf(docsUselineFlags)
}

var (
	errorApi401Unauthorized               = "error_api_401_unauthorized"
	errorApi403Forbidden                  = "error_api_403_forbidden"
	errorApi404NotFound                   = "error_api_404_not_found"
	errorApi408Timeout                    = "error_api_408_timeout"
	errorApi409Conflict                   = "error_api_409_conflict"
	errorApi410Gone                       = "error_api_410_gone"
	errorApi4xxBadRequest                 = "error_api_4xx_bad_request"
	errorApi504GatewayTimedOut            = "error_api_504_gateway_timed_out"
	errorApi5xxInternalServerError        = "error_api_5xx_internal_server_error"
	errorApiDuplicatedError               = "error_api_duplicated_error"
	errorApiExceedJobCountLimitationError = "error_api_exceed_job_count_limitation_error"
	errorApiInvalidError                  = "error_api_invalid_error"
	errorApiMaxError                      = "error_api_max_error"
	errorApiMinError                      = "error_api_min_error"
	errorApiNotExistError                 = "error_api_not_exist_error"
	errorApiNotNullError                  = "error_api_not_null_error"
	errorApiPatternError                  = "error_api_pattern_error"
	errorApiSizeError                     = "error_api_size_error"
	errorApiUnknownError                  = "error_api_unknown_error"
	errorFilepathNotExist                 = "error_filepath_not_exist"
	errorFilepathNotSureHowToLoad         = "error_filepath_not_sure_how_to_load"
)

func ErrorApi401Unauthorized() string {
	return SPrintf(errorApi401Unauthorized)
}

func ErrorApi403Forbidden() string {
	return SPrintf(errorApi403Forbidden)
}

func ErrorApi404NotFound() string {
	return SPrintf(errorApi404NotFound)
}

func ErrorApi408Timeout(arg0 interface{}) string {
	return SPrintf(errorApi408Timeout, arg0)
}

func ErrorApi409Conflict(arg0 interface{}) string {
	return SPrintf(errorApi409Conflict, arg0)
}

func ErrorApi410Gone(arg0 interface{}) string {
	return SPrintf(errorApi410Gone, arg0)
}

func ErrorApi4xxBadRequest() string {
	return SPrintf(errorApi4xxBadRequest)
}

func ErrorApi504GatewayTimedOut() string {
	return SPrintf(errorApi504GatewayTimedOut)
}

func ErrorApi5xxInternalServerError() string {
	return SPrintf(errorApi5xxInternalServerError)
}

func ErrorApiDuplicatedError() string {
	return SPrintf(errorApiDuplicatedError)
}

func ErrorApiExceedJobCountLimitationError() string {
	return SPrintf(errorApiExceedJobCountLimitationError)
}

func ErrorApiInvalidError() string {
	return SPrintf(errorApiInvalidError)
}

func ErrorApiMaxError() string {
	return SPrintf(errorApiMaxError)
}

func ErrorApiMinError() string {
	return SPrintf(errorApiMinError)
}

func ErrorApiNotExistError() string {
	return SPrintf(errorApiNotExistError)
}

func ErrorApiNotNullError() string {
	return SPrintf(errorApiNotNullError)
}

func ErrorApiPatternError() string {
	return SPrintf(errorApiPatternError)
}

func ErrorApiSizeError() string {
	return SPrintf(errorApiSizeError)
}

func ErrorApiUnknownError() string {
	return SPrintf(errorApiUnknownError)
}

func ErrorFilepathNotExist(arg0 interface{}) string {
	return SPrintf(errorFilepathNotExist, arg0)
}

func ErrorFilepathNotSureHowToLoad(arg0 interface{}) string {
	return SPrintf(errorFilepathNotSureHowToLoad, arg0)
}

func (p printContext) ErrorApi401Unauthorized() {
	Printf(errorApi401Unauthorized)
}

func (p printContext) ErrorApi403Forbidden() {
	Printf(errorApi403Forbidden)
}

func (p printContext) ErrorApi404NotFound() {
	Printf(errorApi404NotFound)
}

func (p printContext) ErrorApi408Timeout(arg0 interface{}) {
	Printf(errorApi408Timeout, arg0)
}

func (p printContext) ErrorApi409Conflict(arg0 interface{}) {
	Printf(errorApi409Conflict, arg0)
}

func (p printContext) ErrorApi410Gone(arg0 interface{}) {
	Printf(errorApi410Gone, arg0)
}

func (p printContext) ErrorApi4xxBadRequest() {
	Printf(errorApi4xxBadRequest)
}

func (p printContext) ErrorApi504GatewayTimedOut() {
	Printf(errorApi504GatewayTimedOut)
}

func (p printContext) ErrorApi5xxInternalServerError() {
	Printf(errorApi5xxInternalServerError)
}

func (p printContext) ErrorApiDuplicatedError() {
	Printf(errorApiDuplicatedError)
}

func (p printContext) ErrorApiExceedJobCountLimitationError() {
	Printf(errorApiExceedJobCountLimitationError)
}

func (p printContext) ErrorApiInvalidError() {
	Printf(errorApiInvalidError)
}

func (p printContext) ErrorApiMaxError() {
	Printf(errorApiMaxError)
}

func (p printContext) ErrorApiMinError() {
	Printf(errorApiMinError)
}

func (p printContext) ErrorApiNotExistError() {
	Printf(errorApiNotExistError)
}

func (p printContext) ErrorApiNotNullError() {
	Printf(errorApiNotNullError)
}

func (p printContext) ErrorApiPatternError() {
	Printf(errorApiPatternError)
}

func (p printContext) ErrorApiSizeError() {
	Printf(errorApiSizeError)
}

func (p printContext) ErrorApiUnknownError() {
	Printf(errorApiUnknownError)
}

func (p printContext) ErrorFilepathNotExist(arg0 interface{}) {
	Printf(errorFilepathNotExist, arg0)
}

func (p printContext) ErrorFilepathNotSureHowToLoad(arg0 interface{}) {
	Printf(errorFilepathNotSureHowToLoad, arg0)
}

var (
	cmdCommonFlagHelpTemplate2 = "cmd_common_flag_help_template2"
)

func CmdCommonFlagHelpTemplate2(arg0 interface{}) string {
	return SPrintf(cmdCommonFlagHelpTemplate2, arg0)
}

func (p printContext) CmdCommonFlagHelpTemplate2(arg0 interface{}) {
	Printf(cmdCommonFlagHelpTemplate2, arg0)
}

var (
	cmdCommonFlagHelpTemplate3 = "cmd_common_flag_help_template3"
)

func CmdCommonFlagHelpTemplate3(arg0 interface{}) string {
	return SPrintf(cmdCommonFlagHelpTemplate3, arg0)
}

func (p printContext) CmdCommonFlagHelpTemplate3(arg0 interface{}) {
	Printf(cmdCommonFlagHelpTemplate3, arg0)
}
